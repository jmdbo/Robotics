safecall void MyI2CRead(byte port, byte addr, byte reg, byte cnt, byte& outbuf[]) {
byte cmdbuf[];      // The buffer of data that will be sent
byte nByteReady;    // required for getting the status

  ArrayBuild(cmdbuf, addr, reg);                                      // Build the output buffer

  while (I2CStatus(port, nByteReady) ==  STAT_COMM_PENDING){Yield();} // Wait until bus is free

  I2CBytes(port, cmdbuf, cnt, outbuf)    //Read the registers

  while (I2CStatus(port, nByteReady) ==  STAT_COMM_PENDING){Yield();} // Wait until bus is free
}

task main() {

  byte buff[10];

  SetSensorLowspeed(IN_1);

  while(true) {
  
    int i=1; i++;
    MyI2CRead(IN_1, 0xD0, 0, 10, buff); //ler o buffer

    RectOut(5,5,90,50);  //Desenha quadrado
    Wait(200);
    
    TextOut(0,LCD_LINE1,"Temp: ", false);  //Apresenta Temp
    NumOut(40,LCD_LINE1, buff[i]);

    int a = buff[i];
    PointOut(a, a);       //mete um ponto no ecrã

    if(buff[i] > 35)
        TextOut(15, LCD_LINE7, "VITIMA !", false);
    else
        TextOut(15, LCD_LINE7, "          ", false); //Limpa o vitima

    Wait(200);
  }
}


