#define TPA81_PORT IN_1
#define TPA81_ADDR 0xD0

safecall void MyI2CRead(byte port, byte addr, byte reg, byte cnt, byte& outbuf[]) {
byte cmdbuf[];      // The buffer of data that will be sent
byte nByteReady;    // required for getting the status

  ArrayBuild(cmdbuf, addr, reg);                                      // Build the output buffer

  while (I2CStatus(port, nByteReady) ==  STAT_COMM_PENDING){Yield();} // Wait until bus is free

  I2CBytes(port, cmdbuf, cnt, outbuf)    //Read the registers

  while (I2CStatus(port, nByteReady) ==  STAT_COMM_PENDING){Yield();} // Wait until bus is free
}

task main() {
byte inbuf[10];

  SetSensorLowspeed(TPA81_PORT);

  while(true) {
    MyI2CRead(TPA81_PORT, TPA81_ADDR, 0, 10, inbuf);
    ClearScreen();
    for (int i = 0; i < 8; i ++){
      NumOut(0, LCD_LINE1 - (i*8), inbuf[i+2]);
      
    }
    Wait(200);
  }
}


